import base64
import json

import execjs

result = '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'
result = base64.b64decode(result).decode('latin1')

with open('../辅助爬虫文件/js/Parse_Minimalism.js', 'r') as f:
    content = f.read()
    js_code = execjs.compile(content)
    datas = js_code.call('_0x1e5a5f', result)
    datas = json.loads(datas)
    datas = datas['list']

    for data in datas:
        print(data)
    # print(type(datas))



